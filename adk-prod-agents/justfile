

set dotenv-load
set export

# works because of set export
#PYTHONPATH := "./_common/lib:${PYTHONPATH}"
#FOO := '4523452345'
AGENTS_DIR := 'agents'

#set list := 'listami'
a := "hello"

# Shows justfile targets
list:
    just -l
    @echo "AGENTS_DIR=$AGENTS_DIR"

# Shows justfile code
cat:
    cat justfile


# --- Web Server Targets for Your Agents ---

# Target for your 'my_awesome_agent'
# We 'cd' into the agent's directory before running 'adk web'.
# The '&&' ensures 'adk web' only runs if the 'cd' was successful.
run-agent-web:
    @echo "ðŸš€ Launching the ADK web server for '{{AGENTS_DIR}}'..."
    cd {{AGENTS_DIR}} && adk web --port 8080

web: run-agent-web

# web-serpeverde:
#     @echo This enables Serpeverde common libraries and goes on port 8081.
#     PYTHONPATH="./lib:$PYTHONPATH" adk web --port 8081

# With generic key. Note I have to move the JSON_SHEET_FILE back one folder.
run-trixie-ng:
    GOOGLE_APPLICATION_CREDENTIALS="trixie/private/my-service-account-key.json" \
    JSON_SHEET_FILE="trixie/etc/sheets_config.json" \
    adk run agents/trixie/

# Runs a generic NG agent.
run-ng AGENT:
    echo "ðŸ¥· Running Agent {{AGENT}} after old NewGens mega-folder refactoring."
    echo "ðŸ¦Š Checking agent exists before scomodating ADK.."
    ls "agents/{{AGENT}}/"
    adk run agents/{{AGENT}}/

# run-sql-agent:
#     adk run agents/siculo/

# run-wikipedia-agent:
#     adk run agents/vicky/

# run-alfred-agent:
#     adk run agents/alfred/

# run-claudia-agent:
#     echo Try: Show me GCE VMs
#     adk run agents/claudia/

# run-serpeverde-agent:
#     @#PYTHONPATH="./_common/lib:$PYTHONPATH"
#     @#echo This is to test _common/ code
#     PYTHONPATH="./lib:$PYTHONPATH" adk run agents/serpeverde/

test-claudia-agent:
    echo Show me my Project Id | adk run agents/claudia/
    echo Show me GCE VMs | adk run agents/claudia/

find-python-and-env-files:
    find . -name \*.py -o -name .env

##############
# Deployments
##############
# [deploy] Deploys SQL Agent to Riccardo Cloud Run project
push-sql-to-cloud-run:
    agents/siculo/bin/create_sample_db.sh agents/siculo/cloud_run_pushable_db.sqlite
    # adk deploy cloud_run siculo/ --region europe-west1 --help
    adk deploy cloud_run agents/siculo/ --region europe-west1 --project ricc-genai --service_name siculo --with_ui
    # => https://siculo-794266741446.europe-west1.run.app
    # Now you need to set ENV variables.

push-larry-to-cloud-run:
    adk deploy cloud_run agents/larry/ --region europe-west1 --project ricc-genai --service_name adk-larry --with_ui --trace_to_cloud
    gcloud --project ricc-genai run services add-iam-policy-binding adk-larry \
        --member="user:ricc@google.com" \
        --role="roles/run.invoker" --region europe-west1
    gcloud --project ricc-genai run services add-iam-policy-binding adk-larry \
        --member="user:strebel@google.com" \
        --role="roles/run.invoker" --region europe-west1

# [deploy] Deploys SQL Agent to Riccardo Cloud Run project
iam-give-access-to-ricc:
    gcloud --project ricc-genai  run services add-iam-policy-binding siculo \
        --member="user:ricc@google.com" \
        --role="roles/run.invoker" --region europe-west1
    gcloud --project ricc-genai  run services add-iam-policy-binding siculo \
        --member="user:strebel@google.com" \
        --role="roles/run.invoker" --region europe-west1
    # Note to self: This is failing with
    #    ERROR: (gcloud.run.services.add-iam-policy-binding) FAILED_PRECONDITION: One or more users named in the policy do not belong to a permitted customer,
    #           perhaps due to an organization policy.
    # Most likely an internal Org Policy.
    gcloud --project ricc-genai  run services add-iam-policy-binding siculo \
        --member="user:palladiusbonton@gmail.com" \
        --role="roles/run.invoker" --region europe-west1
    echo We love our GDEs..
    gcloud --project ricc-genai  run services add-iam-policy-binding siculo \
        --member="user:maurizio.ipsale@gmail.com" \
        --role="roles/run.invoker" --region europe-west1


##############
# Unit Tests
##############

test-common-lib-serper-tools:
    python -m unittest lib.serper_tools_test

test: test-common-lib-serper-tools
    echo Testing ALL



##############
# Deployment
###############

# 1. Deploy setup
deploy-setup-once:
    gcloud services enable \
        artifactregistry.googleapis.com \
        cloudbuild.googleapis.com \
        run.googleapis.com

# 2. Deploy Alfred who can in turn call the others. Uses default project_id
deploy-alfred-and-friends:
    adk deploy cloud_run \
    --region="europe-west1" \
    --service_name="alfred-and-friends-service" \
    --with_ui \
    ./agents/alfred

    echo This is broken as it only has Alfred and not his friends.

    gcloud beta run services update "alfred-and-friends-service" \
        --region="europe-west1" \
        --iap

    gcloud beta iap web add-iam-policy-binding \
        --member=user:ricc@google.com \
        --role=roles/iap.httpsResourceAccessor \
        --region="europe-west1" \
        --resource-type=cloud-run \
        --service="alfred-and-friends-service"

# 3. ricc only, rev eng Larry IAP config.
adk-larry-config:
    gcloud beta run services describe adk-larry --region europe-west1 --format yaml | tee adk-larry.yaml
    gcloud run services get-iam-policy adk-larry \
    --region=europe-west1  \
    --format=yaml | tee adk-larry.iap_policy.yaml
# gcloud run services describe YOUR_SERVICE_NAME \
#   --region=YOUR_REGION \
#   --format=yaml > service_config.yaml

alfred-config:
    gcloud compute backend-services get-iam-policy "alfred-and-friends-service"  \
        --project=794266741446 \
        --global \
        --format=yaml

# deploy-siculo:
#     bin/deploy-agent.sh siculo
# # I've tried it with expr 3 - doesnt work
# deploy-trixie:
#     bin/deploy-agent.sh trixie
# # I've tried it with expr 1 .. and IT WORKS!
# deploy-vicky:
#     bin/deploy-agent.sh vicky
# #  works for ricc, not for strebel.
# deploy-larry:
#     bin/deploy-agent.sh larry
# # broken?
# deploy-claudia:
#     bin/deploy-agent.sh claudia
# # broken
# deploy-serpeverde:
#     bin/deploy-agent.sh serpeverde
# # WIP
# deploy-codie:
#     bin/deploy-agent.sh codie

# DEPLOY-NG a generic agent (only Larry works for now)
deploy-ng AGENT:
    bin/deploy-agent.sh {{AGENT}}

# Call ALL deploy-ng iteratively and in alpha order.
deploy-them-all:
    bin/deploy-them-all

google-com-magic-commands:
    gcloud beta iap web get-iam-policy   --resource-type=cloud-run   --service=adk-larry   --region=europe-west1   --format=yaml | tee pvt/larry-iap-policy.yaml
    gcloud beta iap web get-iam-policy   --resource-type=cloud-run   --service=adk-larry   --region=europe-west1   --format=json | tee pvt/larry-iap-policy.json
