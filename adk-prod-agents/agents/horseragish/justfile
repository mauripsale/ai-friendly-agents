
# This list here
list: readme-update
    just -l


# This creates a .venv folder - only used by vscode
install:
    uv sync

# Run the agent in the CLI
[group('agents')]
run-horseragish: install
    uv run adk run horseragish/

# [👍] Runs ADK WEB
[group('agents')]
run-horseragish-web: install
    uv run adk web --reload --log_level info

# TODO implement this
# [group('agents')]
# init:
#     echo "Initializing new world agents..."
# TODO make it work .


# [👍] Take me to github page for [emoji horse][emoji garlic]ish
[group('util')]
open-github:
    open https://github.com/palladius/ai-friendly-agents/tree/main/adk-prod-agents/agents/horseragish


# [👍] Runs the tests for the agents
[group('tests')]
test-horseragish:
    echo 'What data sources can you see? Please use enumerate_sources to do so and provide a bullet point list where every element is prepended by a folder emoji.' |uv run adk run horseragish/

# [👍] Show Action Items on code
[group('util')]
show-todos:
    @echo "TODOs in this project:"
    @echo "[🇮🇹] Searching for TODOs from RICC in the codebase..."
    @find . -maxdepth 3 -type f -name "*.py" -exec grep -H "TODO(ricc" {} \; || echo "🤷 No TODOs found => ricc rocks!"
    @echo "[🇫🇷] Searching for TODOs from MAX in the codebase..."
    @find . -maxdepth 3 -type f -name "*.py" -exec grep -H "TODO(max" {} \; || echo "🤷 No TODOs found => Max is a slacker"
# grep --exclude-dir={.venv} -r "TODO(max" . || echo "No TODOs found."

# 🧹 Cleans up Python bytecode and cache files
[group('util')]
clean:
    @echo "🧹 Cleaning up Python bytecode and cache files. Size before the cure:"
    du -sh .
    find . -name "*.pyc" -delete
    find . -name "__pycache__" -delete
    find . -name ".pytest_cache" -delete
    find . -name ".venv" -delete
    find . -name ".mypy_cache" -delete
    @echo "🧹 Size AFTER the cure:"
    du -sh .

# [👍] This is another script Maxime will thank me for 😉 -> https://github.com/charmbracelet/glow
readme-show:
    cat README.md | glow -s dracula --width 100


# [👍] Updates the README with the latest `just` output
[group('util')]
readme-update:
    @if [ ! -f ".justfile_last_update" ] ; then \
        touch .justfile_last_update; \
    fi
    @if [ "justfile" -nt ".justfile_last_update" ] || [ "README.tpl" -nt ".justfile_last_update" ] ; then \
        echo "justfile or README.tpl has been updated. Running readme generation..."; \
        uv run generate-readme; \
        touch .justfile_last_update; \
    fi



# OLD versions
# readme-update:
#     @if [ ! -f ".justfile_last_update" ] ; then \
#         touch .justfile_last_update; \
#     fi
#     @if [ "justfile" -nt ".justfile_last_update" ] || [ "README.tpl" -nt ".justfile_last_update" ] ; then \
#         echo "justfile or README.tpl has been updated. Running readme generation..."; \
#         uv run generate-readme; \
#         touch .justfile_last_update; \
#     fi



# DOESNT WORK - see https://github.com/casey/just/issues/867 - here Makefile would be better!                │
# [👍] Updates the README with the latest `just` output                                                      │
#readme-update: justfile, ".README.template.md"                                                               │
#    uv run generate-readme
